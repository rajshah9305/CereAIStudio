version: '3.8'

services:
  # Main Application
  app:
    build: .
    container_name: cerestudio-app
    ports:
      - "3000:80"
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://cerestudio:password@postgres:5432/cerestudio
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - cerestudio-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cerestudio-postgres
    environment:
      POSTGRES_DB: cerestudio
      POSTGRES_USER: cerestudio
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - cerestudio-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cerestudio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - cerestudio-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: cerestudio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - cerestudio-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: cerestudio-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - cerestudio-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: cerestudio-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - cerestudio-network

  # Log Management - ELK Stack (Optional)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: cerestudio-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=cerestudio-logs
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - cerestudio-network

  # Background Worker (Celery)
  worker:
    build: .
    container_name: cerestudio-worker
    command: celery -A backend.analytics worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://cerestudio:password@postgres:5432/cerestudio
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/3
      - CELERY_RESULT_BACKEND=redis://redis:6379/4
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - cerestudio-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  cerestudio-network:
    driver: bridge
